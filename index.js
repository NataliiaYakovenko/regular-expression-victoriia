'use strict'

//регулярні вирази використовується наступними методами
//через конструктор
//const regExp1 = new RegExp(шаблони,прапорці) //передається рядок для ініциалізації
//шукаємо чи є рядок qwerty
const regExp1 = new RegExp('qwerty','i','g')
//пропарець і - це незалежність від регістру (великими чи маленькими літерами)
//пропарець g - шукає всі співпадіння незалежно від їх кількості



//серед синтаксичний цукор
//const regExp2 = /шаблони/ прапорці
const regExp2 = /qwerty/g;
//пропарець і - це незалежність від регістру (великими чи маленькими літерами)
//пропарець g - шукає всі співпадіння незалежно від їх кількості

//----------------------------------------------------------------

//Методи регулярних виразів
//test() - виконує пошук зіставлення регулярного виразу вказаному рядку. Повертає true або false.
console.log(regExp2.test('hjqwertyhkjhajjh0000qwerty00000,cpkdjd'))

//match() - повертає збіги при зіставленні рядка з регулярним виразом .
console.log('0000qwerty00000qwerty'.match(regExp2));

//-----------------------------------------------------------------

//Способи відображеня регулярних виразів
/*
Межі
^ - початок рядка
$ - кінець рядка
\b - гранця слова (межа слова)
\B - не границя слова (не межа слова)
* - будь яка кількість будь-яких символів
. - будь який символ
[0-9] - діапазон чисел
[a-z] - діапазон літер нижнього регістру
[A-Z] - діапазон літер великого регістру
[a-zA-Z0-9_] - символи слова

\w - один і з символів[a-zA-Z0-9_]
\W — це спеціальний символ, який означає будь-який несловесний символ.
Це протилежність \w, що відповідає словесним символам (букви, цифри та підкреслення).

^\h - не буква h
\{  - символ відкитої фігурної душки
\}  - символ закитої фігурної душки

\d є спеціальним символом, який представляє цифру. 
Це еквівалентно виразу [0-9], тобто він відповідає будь-якій одиничній цифрі від 0 до 9.
^\d  - не цифра
\D — це спеціальний символ, який означає будь-який нецифровий символ. 
Він є протилежним до \d, яке відповідає будь-якій цифрі (від 0 до 9).

\s - пробіл
\S - не пробіл

() (круглі дужки) мають спеціальне значення і використовуються для кількох різних цілей
 Групування виразів
 Альтернативи в групах (Alternation)


Квантифікатори
Квантифікатор — це інструмент, який дозволяє вказати, 
скільки разів певний символ чи група символів має зустрічатися в рядку. 
{8} - конкретне число символів
{1,10} -  діапазон від 1 до 10 символів
+ {1,} -  1 або більше символів
* {0,} -  0 або більше символів
? {0,1}-  0 або 1 символ
*/

//Перевірити, що qwerty є всім рядком
console.log('qwerty'.match(/^qwerty$/));

//Чи стоїть qwerty на початку рядка ігноруючи регістр
/*
'qwerty' - проходить
'qwertyfrfrfrfrfr'  - проходить
'Qwerty44444444'    - проходить
'2wer4se9qwerty'    - не проходить

*/
console.log('Qwerty88888'.match(/^qwerty/i));

//Перевірити чи є dog окремим словом
console.log('My dog is cute'.match(/\bdog\b/i))

console.log('My hotdog is cute'.match(/\bdog\b/i))
//----------------------------------------------------------

//Первірити, чи пароль починається на qw і закінчується на ty, посередені між qw-ty має бути 2 символи
console.log('qwerty'.match(/^qw..ty$/));
console.log('qw55ty'.match(/^qw..ty$/));
console.log('qwrty'.match(/^qw..ty$/));
//--------------------------------------------------------------

//Перевірити, що рядок містить 7 символів і починається на 111
console.log('111qwer'.match(/^111[a-zA-Z0-9]{4}$/));  //підходить
console.log('1114567'.match(/^111[a-zA-Z0-9]{4}$/));   //підходить
console.log('1114567'.match(/^111....$/i));   //підходить
console.log('9111ol,'.match(/^111....$/i));   //не підходить
console.log('111qwer5oij'.match(/^111[a-zA-Z0-9]{4}$/));   // не підходить
console.log('611456'.match(/^111[a-zA-Z0-9]{4}$/));  // не підходить
//--------------------------------------------------------------------------------

//Перевірити через Квантифікатори, що рядок містить 7 символів і починається на 111
console.log('111qwer'.match(/^1{3}.{4}$/));  //підходить
console.log('{111qwer}'.match(/^\{1{3}.{4}\}$/));  //підходить

//Первірити чи відповідає рядок email 1-60@1-10
console.log('yakovenkonatali@gmail.com'.match(/^.{1,60}@.{1,10}$/));  //підходить
//-----------------------------------------------------------------------------

//Альтернативні символи / один з групи символів
//В рядку тільки цифри
console.log('123456789'.match(/^[0-9]+$/));
console.log('123456789'.match(/^\d+$/));

//Перевірте, що вказано номер телефону у форматі (+380 -2ц - 3ц -2ц - 2ц)
console.log('+380-66-286-51-35'.match(/^\+380-\d{2}-\d{3}-\d{2}-\d{2}$/));

console.log('+380-66-286-51-35'.match(/^\+380-\d{2}-\d{3}(-\d{2}){2}$/));

console.log('+380-66-286-51-35'.match(/^\+380-(66|95|67|93|50|73)-\d{3}(-\d{2}){2}$/));
//----------------------------------------------------------------------------------

//Перевірити на ім'я
console.log('Nataliia'.match(/^[A-Z]{1}[a-z]+$/));
//Перевірити на ім'я з 20 літер
console.log('Nataliia'.match(/^[A-Z][a-z]{1,19}$/));
//----------------------------------------------------------------------------

//Перевірити числа з . і -числа
111.222
-111.222
console.log('-11.222'.match(/^-?\d+\.\d+$/));
console.log('-11222'.match(/^-?\d+\.\d+$/)); //не підходить
//--------------------------------------------------------------------------------

//Перевірити альтернативні слова
console.log('I like dog'.match(/\b(cat|dog)\b/));

//Перевірити альтернативні слова в множині
console.log('I like dogs'.match(/\b(cat|dog)s?\b/));
//---------------------------------------------------------------------

//Перевірка складного імені
//Mariia-Antuaneta
console.log('Mariia-Antuaneta'.match(/^[A-Z][a-z]{1,19}(-[A-Z][a-z]{1,19})?$/));
console.log('Mariia-Antuaneta'.match(/^[A-Z][a-z]{1,19}\-?[A-Z]{1}[a-z]{1,19}$/));
//--------------------------------------------------------------------------------

//Знайти цитати
//? переводить квантифікатор з жадного режиму в ленивий
console.log("I say 'yes', but I think say 'no'".match(/'.*?'/g));
//-------------------------------------------------------------------------------

//Виокремити речення
console.log('Dlklkf kjkjf diwuiuqd. Jlzkdadkak hdjahdj jdax.'.match(/[A-Z].*?\./g));
//--------------------------------------------------------------------------------

//Приклад з ціною, потрібно перевірити тільки цифру з ціною
console.log('I buy 3 bread by 8$ '.match(/\d+(?=\$)/g));
//--------------------------------------------------------------------------------

//Для перевырки паролядовжина: 8-16, мають бути букви верхнього і нижнього регістру,
// цифри, спец. символи
console.log('Aq1g.qqy!'.match(/^(?=.*[A-Z].*)(?=.*[a-z].*)(?=.*\d.*)(?=.*[!@#$%^&.].*).{8,16}$/));